#!/usr/bin/env php
<?php

require __DIR__ . '/Packages/saeghe/cli/Source/IO/Read.php';
require __DIR__ . '/Packages/saeghe/cli/Source/IO/Write.php';
require __DIR__ . '/Source/Commands/Add.php';
require __DIR__ . '/Source/Commands/Build.php';
require __DIR__ . '/Source/Commands/Initialize.php';
require __DIR__ . '/Source/Commands/Remove.php';
require __DIR__ . '/Source/Commands/Update.php';

use Saeghe\Cli\IO\Read;

$credentials = json_decode(json: file_get_contents(__DIR__ . '/credentials.json'), associative: true, flags: JSON_THROW_ON_ERROR);

$project = Read\argument('project', '');
$config = Read\argument('config', 'build.json');

$projectRoot = strlen($project) ? $_SERVER['PWD'] . '/' . $project . '/' : $_SERVER['PWD'] . '/';

$configPath = $projectRoot . $config;
$setting = file_exists($configPath) ? json_decode(json: file_get_contents($configPath), associative: true, flags: JSON_THROW_ON_ERROR) : [];
$setting = [
    'packages-directory' => $setting['packages-directory'] ?? 'Packages',
    'map' => $setting['map'] ?? [],
    'packages' => $setting['packages'] ?? [],
    'entry-points' => $setting['entry-points'] ?? [],
    'executables' => $setting['executables'] ?? [],
];

$lockPath = str_replace('.json', '-lock.json', $configPath);
$lockSetting = file_exists($lockPath) ? json_decode(json: file_get_contents($lockPath), associative: true, flags: JSON_THROW_ON_ERROR) : [];
$lockSetting['packages'] = $lockSetting['packages'] ?? [];

$packagesDirectory = $projectRoot . $setting['packages-directory'] . '/';

$command = Read\argument('command', 'help');

switch ($command) {
    case 'initialize':
       \Saeghe\Saeghe\Commands\Initialize\run();
       break;
    case 'add':
        \Saeghe\Saeghe\Commands\Add\run();
        break;
    case 'build':
        \Saeghe\Saeghe\Commands\Build\run();
        break;
    case 'remove':
        \Saeghe\Saeghe\Commands\Remove\run();
        break;
    case 'update':
        \Saeghe\Saeghe\Commands\Update\run();
        break;
    default:
        // TODO: Add help
        break;
}
